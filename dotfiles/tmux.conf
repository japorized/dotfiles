set -g default-terminal "tmux-256color"

{%@@ if profile == "Earl-Grey.local" @@%}
set-option -g default-command "reattach-to-user-namespace -l $SHELL"
# source '/Users/JohnsonNg/Library/Python/2.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf'
{%@@ endif @@%}

set-option -g allow-rename off
setw -g mode-keys vi

# Set numbering of windows at 1
set -g base-index 1

# Changing prefix binding from C-b to C-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Refresh tmux configurations
bind-key -T prefix R source-file ~/.tmux.conf

# Copy-mode
unbind-key [
unbind-key Escape
unbind-key q
unbind-key p
unbind-key C-j
unbind-key C-k
bind-key -T prefix v copy-mode
bind-key -T prefix p paste-buffer
{%@@ if profile != "WinCrap" @@%}
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi V send-keys -X rectangle-toggle
bind-key -T copy-mode-vi C-j send-keys -X scroll-down
bind-key -T copy-mode-vi C-k send-keys -X scroll-up
{%@@ endif @@%}
{%@@ if profile == "Earl-Grey.local" @@%}
bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
{%@@ elif profile == "Oolong" @@%}
bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
{%@@ endif @@%}

# Split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# New window with current path
bind c new-window -c "#{pane_current_path}"

# Tab navigation
unbind-key -T prefix n
unbind-key -T prefix l
bind-key -T prefix J next-window
bind-key -T prefix K last-window

# Pane Selection
# bind-key -T prefix h select-pane -L
# bind-key -T prefix j select-pane -D 
# bind-key -T prefix k select-pane -U
# bind-key -T prefix l select-pane -R
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Some extra "padding" around panes and windows
setw -g pane-border-status off

# Eye Candy
  ## Status bar
set -g status-bg black
set -g status-fg white
set -g status-interval 1
set -g status-left ''
set -g status-right '#[fg=colour5,bg=default] ░▓#[bg=colour5,fg=white,bold]  %b %d, %H:%M:%S  '
set -g status-justify left

setw -g window-status-bg default
setw -g window-status-fg white
setw -g window-status-current-bg black
setw -g window-status-current-fg white
setw -g window-status-current-attr bold
setw -g window-status-format '#[bg=default,fg=#8c8c8c,bold] #I#[bg=default,fg=#8c8c8c] #W  '
setw -g window-status-current-format '#[fg=white,bg=colour5] #I #[fg=colour5,bg=default]▓░ #W  '

  ## Panes
set -g pane-active-border-fg colour5
set -g pane-active-border-bg default
set -g pane-border-fg colour243
set -g pane-border-bg default

set -sg escape-time 10
set -g focus-events on
